'on':
  workflow_dispatch: ~
  schedule:
  - cron: 25 04 * * *
name: update
jobs:
  update:
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v3

    - name: Install Java 17
      uses: actions/setup-java@v3
      with:
        distribution: adopt
        java-version: '17'

    - uses: nanasess/setup-chromedriver@v2

    - name: Download and start Selenium
      run: |
        wget https://selenium-release.storage.googleapis.com/3.9/selenium-server-standalone-3.9.1.jar
        java -jar selenium-server-standalone-3.9.1.jar &

    - uses: r-lib/actions/setup-r@v2

    - name: Query dependencies
      run: |
        install.packages('remotes')
        saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
      shell: Rscript {0}

    - name: Restore R package cache
      uses: actions/cache@v3
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds')
          }}
        restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

    - name: Install dependencies
      run: |
        install.packages(c("devtools"))
        devtools::install_deps(dependencies = TRUE, type = "binary")
      shell: Rscript {0}

    - name: Checkout output branch
      uses: actions/checkout@v3
      with:
        ref: output
        path: output

    - name: Update output
      run: |
        devtools::load_all()

        products <- get_sapphic_bison_test_kits() 

        stopifnot(nrow(products) > 0)
        
        products |>
          complete_exchange_format() |>
          jsonlite::write_json("output/exchange.json")

      shell: Rscript {0}

    - name: Commit new output
      if: github.ref == 'refs/heads/main'
      run: |
        cd output
        git config user.name "Update Bot"
        git config user.email "<>"
        git add .
        git commit --allow-empty -m "Updated for new release"
        git push origin output
        cd ..
